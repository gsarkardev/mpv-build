# This is a basic workflow to help you get started with Actions

name: build-mpv-for-linux

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Echo
        run: echo "Building mpv..."

      # Runs a set of commands using the runners shell
      - name: Get dependencies and build mpv
        run: |
          num_cores=$(nproc) && echo "No. of cores available is $num_cores"
          sudo apt update -qq
          echo "Installing meson from pip3 --------------------------->"
          sudo apt install python3-pip && pip3 install --user meson
          echo "Getting FFMPEG dependencies --------------------------->"
          sudo apt install -y autoconf automake build-essential cmake git-core libass-dev libfreetype6-dev libgnutls28-dev libmp3lame-dev libsdl2-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev meson ninja-build pkg-config texinfo wget yasm zlib1g-dev nasm libx264-dev libx265-dev libnuma-dev libvpx-dev libfdk-aac-dev libopus-dev libdav1d-dev
          echo "Getting MPV dependencies --------------------------->"
          sudo apt install -y gcc clang yasm git ninja-build autoconf autotools-dev libx11-dev libxext-dev libvdpau-dev libgl1-mesa-dev libxv-dev libasound2-dev libpulse-dev libfribidi-dev libfreetype6-dev libfontconfig1-dev libjpeg-dev libssl-dev libgnutls28-dev youtube-dl libx264-dev libmp3lame-dev libfdk-aac-dev libharfbuzz-dev libxpresent-dev automake libegl1-mesa-dev libtool libxinerama-dev libxrandr-dev x11proto-core-dev
          chmod +x rebuild
          ./rebuild -j$num_cores
          echo "############################ MPV build is successful. ############################"

      # Uploads build directory as artifact
      - name: Upload build directory
        uses: actions/upload-artifact@v4
        with:
          name: mpv-build
          path: ./mpv/build
          retention-days: 5
